<?php

/**
 * @file
 * Preprocess functions for IRSR Subtheme.
 */

use Drupal\node\NodeInterface;

/**
 * Prepares variables for the html.html.twig template.
 */
function ppo_irsr_subtheme_preprocess_html(&$variables) {
  $variables['stanford_basic_path'] = \Drupal::service('extension.list.theme')->getPath('stanford_basic');
}

/**
 * Implements hook_preprocess_HOOK().
 */
function ppo_irsr_subtheme_preprocess_page(&$variables) {
  if (
    isset($variables['node']) &&
    $variables['node'] instanceof NodeInterface &&
    $variables['node']->bundle() == 'stanford_page' &&
    $variables['node']->hasField('layout_selection') &&
    $variables['node']->get('layout_selection')->getString() == 'stanford_basic_page_full'
  ) {
    $variables['#attached']['library'][] = 'ppo_irsr_subtheme/basic-page-full-width';
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function ppo_irsr_subtheme_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (!empty($variables['elements']['#id']) && $variables['elements']['#id'] == 'ppo_irsr_subtheme_search') {
    $suggestions[] = 'block__stanford_basic_search';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function ppo_irsr_subtheme_preprocess_ds_entity_view(&$variables) {
  // if not running on a paragraph, exit out.
  if (!isset($variables['content']['#paragraph'])) {
    return;
  }

  $paragraph = $variables['content']['#paragraph'];

  // Process Banners
  if ($paragraph->bundle() == 'stanford_banner') {
    ppo_irsr_subtheme_preprocess_banner($variables);
  }
}

/**
 * Implements hook_preprocess_banner().
 */
function ppo_irsr_subtheme_preprocess_banner(&$variables) {

  $paragraph = $variables['content']['#paragraph'];

  // Add banner variant style class to card wrapper.
  $variables['attributes']['class'][] = $paragraph->getBehaviorSetting('react_paragraphs:banner_variant_info', 'banner_style');
}

/**
 * Implements hook_preprocess_lists().
 */
function ppo_irsr_subtheme_preprocess_paragraph__stanford_lists(array &$variables): void {
  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
  $paragraph = &$variables['paragraph'];
  $existing_classes = $variables['attributes']['class'] ?? [];
  $extra_classes = [
    $paragraph->getBehaviorSetting('react_paragraphs:lists_style', 'cards_color'),
    $paragraph->getBehaviorSetting('react_paragraphs:lists_style', 'grid_rows'),
  ];
  $variables['attributes']['class'] = array_merge($existing_classes, $extra_classes);
}
